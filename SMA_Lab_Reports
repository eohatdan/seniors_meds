<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Lab Reports</title>
  <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js"></script>
  <style>
    body {
      background-color: #f0f8ff;
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }
    .container {
      max-width: 800px;
      margin: 40px auto;
      background: white;
      padding: 20px 30px;
      border-radius: 12px;
      box-shadow: 0 0 12px rgba(0, 0, 0, 0.2);
    }
    h2 {
      text-align: center;
      color: #003366;
    }
    label {
      display: block;
      margin-top: 12px;
      font-weight: bold;
    }
    input, button {
      margin-top: 6px;
      width: 100%;
      padding: 10px;
      font-size: 16px;
      border-radius: 6px;
      border: 1px solid #ccc;
    }
    button {
      background-color: #0066cc;
      color: white;
      cursor: pointer;
      border: none;
    }
    button:hover {
      background-color: #004999;
    }
    pre {
      background: #f4f4f4;
      padding: 12px;
      white-space: pre-wrap;
      border-radius: 6px;
      overflow-x: auto;
    }
    table {
      margin-top: 20px;
      border-collapse: collapse;
      width: 100%;
    }
    th, td {
      padding: 10px;
      border: 1px solid #ccc;
    }
    th {
      background-color: #e0eaff;
    }
    .top-right {
      text-align: right;
      margin-bottom: 10px;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="top-right">
      <button onclick="window.location.href='index.html'">‚¨ÖÔ∏è Return to Main Menu</button>
    </div>

    <h2>Upload Lab Report</h2>
    <label for="labDate">Date of Report</label>
    <input type="date" id="labDate" />

    <label for="labFile">Upload PDF</label>
    <input type="file" id="labFile" accept="application/pdf" />

    <button onclick="uploadAndExtract()">üì§ Upload and Extract</button>

    <div id="jsonPreview" style="margin-top: 20px;"></div>

    <button id="saveBtn" style="display: none;" onclick="saveToSupabase()">üíæ Save to Supabase</button>

    <h3>Previous Lab Reports</h3>
    <table id="reportsTable">
      <thead>
        <tr>
          <th>Date</th>
          <th># Readings</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <script>
    const SUPABASE_URL = 'https://ixxzxenspwzrkiazepbj.supabase.co';
    const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml4eHp4ZW5zcHd6cmtpYXplcGJqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM1MzE1NjMsImV4cCI6MjA1OTEwNzU2M30.28E41uParU4YMisV-Kxlq1KybbOdRrbKqXYKrH84COw';
    const client = supabase.createClient(SUPABASE_URL, SUPABASE_KEY);
    const patientId = localStorage.getItem('patientUUID');
    let currentReadings = null;

    async function uploadAndExtract() {
      const fileInput = document.getElementById('labFile');
      const dateInput = document.getElementById('labDate');

      if (!fileInput.files.length || !dateInput.value) {
        alert('Please select a date and a PDF file.');
        return;
      }

      const formData = new FormData();
      formData.append('pdf', fileInput.files[0]);

      const response = await fetch('https://seniors-meds-2.onrender.com/extract-readings', {
        method: 'POST',
        body: formData
      });

      const result = await response.json();
      if (result.readings) {
        currentReadings = result.readings;
        document.getElementById('jsonPreview').innerHTML =
          '<h4>Extracted Readings</h4><pre>' +
          JSON.stringify(result.readings, null, 2) +
          '</pre>';
        document.getElementById('saveBtn').style.display = 'block';
      } else {
        alert('Extraction failed.');
        console.log(result);
      }
    }

    async function saveToSupabase() {
      const date = document.getElementById('labDate').value;

      const { error } = await client.from('lab_reports').insert([
        {
          patient_id: patientId,
          date: date,
          readings: currentReadings
        }
      ]);

      if (error) {
        alert('Error saving lab report');
        console.log(error);
      } else {
        alert('Lab report saved.');
        loadPreviousReports();
      }
    }

    async function loadPreviousReports() {
      const { data, error } = await client
        .from('lab_reports')
        .select('date, readings')
        .eq('patient_id', patientId)
        .order('date', { ascending: false });

      const tbody = document.querySelector('#reportsTable tbody');
      tbody.innerHTML = '';

      if (data) {
        data.forEach(row => {
          const tr = document.createElement('tr');
          tr.innerHTML = `
            <td>${row.date}</td>
            <td>${Array.isArray(row.readings) ? row.readings.length : 'N/A'}</td>
          `;
          tbody.appendChild(tr);
        });
      }

      if (error) {
        console.log('Load error:', error);
      }
    }

    loadPreviousReports();
  </script>
</body>
</html>
